#summary 24p対応BRAVIA-KDL-JP5.lua
{{{
--[[
  AVCHD 対応 Bravia 用スクリプト
]]


-- H264 を Mpeg TS にトランスコードする
H264ToMpegTS = true


-- この機種がサポートしているメディア情報のリスト
SUPPORT_MEDIA_LIST = {
  "image/jpeg:DLNA.ORG_PN=JPEG_SM",
  "image/jpeg:DLNA.ORG_PN=JPEG_MED",
  "image/jpeg:DLNA.ORG_PN=JPEG_LRG",
  "audio/mpeg:DLNA.ORG_PN=MP3",
  "audio/L16:DLNA.ORG_PN=LPCM",
  "video/mpeg:DLNA.ORG_PN=MPEG_PS_NTSC",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=MPEG_TS_JP_T",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=AVC_TS_HD_60_AC3_T;SONY.COM_PN=AVC_TS_HD_60_AC3_T",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=AVC_TS_HD_60_AC3;SONY.COM_PN=AVC_TS_HD_60_AC3",
  "video/mpeg:DLNA.ORG_PN=AVC_TS_HD_60_AC3_ISO;SONY.COM_PN=AVC_TS_HD_60_AC3_ISO",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=MPEG_TS_HD_60_L2_T;SONY.COM_PN=HD2_60_T",
  "video/mpeg:DLNA.ORG_PN=MPEG_TS_HD_60_L2_ISO;SONY.COM_PN=HD2_60_ISO",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=MPEG_TS_SD_60_AC3_T",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=MPEG_TS_SD_60_L2_T",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=AVC_TS_HD_24_AC3_T;SONY.COM_PN=AVC_TS_HD_24_AC3_T",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=AVC_TS_HD_24_AC3;SONY.COM_PN=AVC_TS_HD_24_AC3",
  "video/mpeg:DLNA.ORG_PN=AVC_TS_HD_24_AC3_ISO;SONY.COM_PN=AVC_TS_HD_24_AC3_ISO",
  "video/vnd.dlna.mpeg-tts:DLNA.ORG_PN=AVC_TS_JP_AAC_T",
  "video/x-mp2t-mphl-188:*"
}


--[[
 GetMimeType 関数

 メディアファイルに応じたメディア情報を返す。

 引数：
   fname: ファイル名
   minfo: MediaInfo.dll などから得られた情報
]]
function GetMimeType(fname, minfo)
  
  if minfo.General.Format == "" then return "" end
  
  if minfo.General.Format == "NowRecording" then
    -- 録画中のファイルは MPEG-TS と仮定する。
    return "video/mpeg:"
           .."DLNA.ORG_PN=MPEG_TS_HD_60_L2_ISO;"
           .."SONY.COM_PN=HD2_60_ISO;"
           .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
           .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
  end

  local ext = string.lower(string.match(fname, "%.(.-)$"))

  if ext == "jpg" then
    return "image/jpeg:DLNA.ORG_PN=JPEG_LRG;"
     .."DLNA.ORG_FLAGS=8cf00000000000000000000000000000"
  end

  if ext == "mp3" then
    return "audio/mpeg:DLNA.ORG_PN=MP3;"
     .."DLNA.ORG_FLAGS=8d700000000000000000000000000000"
  end
  
  if ext == "wav" then
    return "audio/L16:DLNA.ORG_PN=LPCM;"
     .."DLNA.ORG_FLAGS=8d700000000000000000000000000000"
  end
  
  if minfo.Video.Format == "" then return "" end
  
  local res = "video/x-mp2t-mphl-188:*;DLNA.ORG_OP=11;DLNA.ORG_CI=0"
  local fr = string.sub(minfo.Video.FrameRate, 1, 2)

  if minfo.Video.Format == "MPEG Video" or minfo.Video.Format == "AVC" then
    if minfo.General.Format == "BDAV" then
      -- NTSC?
      if (fr == "29") or (fr == "59") or (minfo.Video.Standard == "NTSC") then
        res = "video/vnd.dlna.mpeg-tts:"
         .."DLNA.ORG_PN=MPEG_TS_JP_T;"
         .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
         .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"

        -- AVCHD?
        if minfo.Video.Format == "AVC" then
          if minfo.Audio.Format == "AC-3" then
            res = "video/vnd.dlna.mpeg-tts:"
             .."DLNA.ORG_PN=AVC_TS_HD_60_AC3_T;"
             .."SONY.COM_PN=AVC_TS_HD_60_AC3_T;"
             .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
             .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
          elseif minfo.Audio.Format == "AAC" then
            res = "video/vnd.dlna.mpeg-tts:"
             .."DLNA.ORG_PN=AVC_TS_JP_AAC_T;"
             .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
             .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
          end
        else
          -- HD?
          if tonumber(minfo.Video.Width) > 1000 then
            -- AAC etc.
            res = "video/vnd.dlna.mpeg-tts:"
             .."DLNA.ORG_PN=MPEG_TS_HD_60_L2_T;"
             .."SONY.COM_PN=HD2_60_T;"
             .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
             .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
          else
            -- AC3?
            if minfo.Audio.Format == "AC-3" then
              res = "video/vnd.dlna.mpeg-tts:"
               .."DLNA.ORG_PN=MPEG_TS_SD_60_AC3_T;"
               .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
               .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
            else
              -- AAC etc.
              res = "video/vnd.dlna.mpeg-tts:"
               .."DLNA.ORG_PN=MPEG_TS_SD_60_L2_T;"
               .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
               .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
            end
          end
        end
      
      -- 24p(not PAL)?
      elseif fr ~= "25" and fr ~= "50" then
        res = "video/vnd.dlna.mpeg-tts:"
         .."DLNA.ORG_PN=AVC_TS_HD_24_AC3_T;"
         .."SONY.COM_PN=AVC_TS_HD_24_AC3_T;"
         .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
         .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
      end
      
      return res

    elseif minfo.General.Format == "MPEG-TS" then
      -- NTSC?
      if (fr == "29") or (fr == "59") or (minfo.Video.Standard == "NTSC") then
        -- AVCHD?
        if minfo.Video.Format == "AVC" and minfo.Audio.Format == "AC-3" then
          -- [[
          res = "video/mpeg:"
           .."DLNA.ORG_PN=AVC_TS_HD_60_AC3_ISO;"
           .."SONY.COM_PN=AVC_TS_HD_60_AC3_ISO;"
           .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
           .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
          -- ]]
          --[[ これも同じ？
          res = "video/vnd.dlna.mpeg-tts:"
           .."DLNA.ORG_PN=AVC_TS_HD_60_AC3;"
           .."SONY.COM_PN=AVC_TS_HD_60_AC3;"
           .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
           .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
          -- ]]
        else
          res = "video/mpeg:"
           .."DLNA.ORG_PN=MPEG_TS_HD_60_L2_ISO;"
           .."SONY.COM_PN=HD2_60_ISO;"
           .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
           .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
        end

      -- 24p(not PAL)?
      elseif fr ~= "25" and fr ~= "50" then
        -- [[
        res = "video/mpeg:"
         .."DLNA.ORG_PN=AVC_TS_HD_24_AC3_ISO;"
         .."SONY.COM_PN=AVC_TS_HD_24_AC3_ISO;"
         .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
         .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
        -- ]]
        --[[ これも同じ？
        res = "video/vnd.dlna.mpeg-tts:"
         .."DLNA.ORG_PN=AVC_TS_HD_24_AC3;"
         .."SONY.COM_PN=AVC_TS_HD_24_AC3;"
         .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
         .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
        -- ]]
      end
      return res
    end
  end

  -- ！！！ここまでは BRAVIA-KDL-JP5.lua と同じ！！！

  if minfo.General.Format == "MPEG-PS"
   -- NTSC?
   and ((fr == "29") or (fr == "59") or (minfo.Video.Standard == "NTSC"))
   -- SD?
   and tonumber(minfo.Video.Width) < 1000
   -- アスペクト比=16/9 ?
   and minfo.Video.DisplayAspectRatio == "1.778" then

    return "video/mpeg:DLNA.ORG_PN=MPEG_PS_NTSC;"
     .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
     .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"

  elseif H264ToMpegTS and minfo.Video.Format == "AVC"
   -- CFR?
   and minfo.Video.FrameRate_Mode ~= "VFR"
   -- アスペクト比=16/9 ?
   and minfo.Video.DisplayAspectRatio == "1.778" then

    -- NTSC?
    if  ((fr == "29") or (fr == "59") or (minfo.Video.Standard == "NTSC")) then
      return "video/mpeg:"
       .."DLNA.ORG_PN=AVC_TS_HD_60_AC3_ISO;"
       .."SONY.COM_PN=AVC_TS_HD_60_AC3_ISO;"
       .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
       .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
       ..":::TRANS:::" -- トランスコードが必要なことをBMSに伝える
     
       --[[
        つぶやき：AVC_TS_JP_AAC_T とかも使えば AAC などにも対応できるかも。
        もっとも、音声変換はもともと負荷が低いのであまり意味がないかも。
       ]]

    -- 24p(not PAL)?
    elseif fr ~= "25" and fr ~= "50" then
      res = "video/mpeg:"
       .."DLNA.ORG_PN=AVC_TS_HD_24_AC3_ISO;"
       .."SONY.COM_PN=AVC_TS_HD_24_AC3_ISO;"
       .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
       .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
       ..":::TRANS:::" -- トランスコードが必要なことをBMSに伝える
    end
  end

  return "video/mpeg:DLNA.ORG_PN=MPEG_PS_NTSC;"
   .."DLNA.ORG_FLAGS=8d700000000000000000000000000000;"
   .."DLNA.ORG_OP=11;DLNA.ORG_CI=0"
   ..":::TRANS:::" -- トランスコードが必要なことをBMSに伝える
end


--[[
 GetTranscodeCommand 関数
 
 トランスコードのコマンドを返す。

 引数：
   fname: ファイル名
   minfo: MediaInfo.dll などから得られた情報
]]
function GetTranscodeCommand(fname, minfo)

  local aspect = minfo.Video.DisplayAspectRatio
  if aspect == "" then aspect = "1.333" end
  --print("\r\nDEBUG: "..fname.." aspect="..aspect.."\r\n")
  local w = minfo.Video.Width
  local h = minfo.Video.Height

  -- この機種ではHDサイズのものは正しく表示されない場合があるよう
  -- なのでSDサイズに変換する。
  if tonumber(w) > 720 then
    w = "720" h = "480"
  end
  -- この機種ではアスペクト比16/9以外のものに未対応のようなので
  -- アスペクト比16/9以外のものは16/9に変換する。
  local vfs = "scale="..w..":"..h..","
  if aspect ~= "1.778" then
    local sw = w
    local sh = h
    if tonumber(aspect) < 1.778 then
      sw = math.floor(w / 1.778 * aspect + 0.5)
    else
      sh = math.floor(h * 1.778 / aspect + 0.5)
    end
    vfs = "scale="..sw..":"..sh..",expand="..w..":"..h..","
    aspect = "1.778"
  end
  
  if minfo.General.Format == "ISO DVD" then

    if minfo.DVD.ALANG.en and minfo.DVD.SLANG.ja then

      -- 英語音声と日本語字幕がある場合

      return [[

       [$_name_$ (英語音声・日本語字幕)]
       mencoder -dvd-device "$_in_$" dvd://$_longest_$
       -o "$_out_$" -oac lavc -ovc lavc -of mpeg -mpegopts format=dvd:tsaf
       -vf ]]..vfs..[[harddup -srate 48000 -af lavcresample=48000
       -ofps 30000/1001 -alang en -slang ja -channels 6
       -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:vrc_maxrate=9800:vbitrate=5000:keyint=18:vstrict=0:acodec=ac3:abitrate=192:aspect=]]
       ..aspect

      ..[[

       [$_name_$ (日本語音声)]
       mencoder -dvd-device "$_in_$" dvd://$_longest_$
       -o "$_out_$" -oac lavc -ovc lavc -of mpeg -mpegopts format=dvd:tsaf
       -vf ]]..vfs..[[harddup -srate 48000 -af lavcresample=48000
       -ofps 30000/1001 -alang ja -slang ja -forcedsubsonly -channels 6
       -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:vrc_maxrate=9800:vbitrate=5000:keyint=18:vstrict=0:acodec=ac3:abitrate=192:aspect=]]
       ..aspect
       
      ..[[

       [$_name_$ (英語音声)]
       mencoder -dvd-device "$_in_$" dvd://$_longest_$
       -o "$_out_$" -oac lavc -ovc lavc -of mpeg -mpegopts format=dvd:tsaf
       -vf ]]..vfs..[[harddup -srate 48000 -af lavcresample=48000
       -ofps 30000/1001 -alang en -slang en -forcedsubsonly -channels 6
       -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:vrc_maxrate=9800:vbitrate=5000:keyint=18:vstrict=0:acodec=ac3:abitrate=192:aspect=]]
       ..aspect
       
    else

      return [[

       [$_name_$]
       mencoder -dvd-device "$_in_$" dvd://$_longest_$
       -o "$_out_$" -oac lavc -ovc lavc -of mpeg -mpegopts format=dvd:tsaf
       -vf ]]..vfs..[[harddup -srate 48000 -af lavcresample=48000
       -ofps 30000/1001 -forcedsubsonly -channels 6
       -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:vrc_maxrate=9800:vbitrate=5000:keyint=18:vstrict=0:acodec=ac3:abitrate=192:aspect=]]
       ..aspect

    end

  else

    if H264ToMpegTS and minfo.Video.Format == "AVC"
     -- NTSC or 24p(not PAL)?
     and  fr ~= "25" and fr ~= "50" and minfo.Video.Standard ~= "PAL"
     -- CFR?
     and minfo.Video.FrameRate_Mode ~= "VFR"
     -- アスペクト比=16/9 ?
     and minfo.Video.DisplayAspectRatio == "1.778" then

      if minfo.Audio.Format == "AC-3" then
        -- コンテナのみ替える
        return [[

         [$_name_$ (TRANSCODE to AVCHD)]
         mencoder "$_in_$" -o "$_out_$"
         -oac copy -ovc copy -of lavf -lavfopts format=mpegts -vf harddup
         ]]
      else
        -- コンテナ替え＋音声を AC-3 に変換
        return [[

         [$_name_$ (TRANSCODE to AVCHD)]
         mencoder "$_in_$" -o "$_out_$"
         -oac lavc -ovc copy -of lavf -lavfopts format=mpegts
         -vf harddup -srate 48000 -af lavcresample=48000 -channels 6
         -lavcopts acodec=ac3:abitrate=192
         ]]
      end

    else

      return [[

       [$_name_$ (TRANSCODE to MPEG-PS)]
       mencoder "$_in_$" -o "$_out_$"
       -oac lavc -ovc lavc -of mpeg -mpegopts format=dvd:tsaf
       -vf ]]..vfs..[[harddup -srate 48000 -af lavcresample=48000
       -ofps 30000/1001 -channels 6
       -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:vrc_maxrate=9800:vbitrate=5000:keyint=18:vstrict=0:acodec=ac3:abitrate=192:aspect=]]
       ..aspect
    end
  end
end
}}}